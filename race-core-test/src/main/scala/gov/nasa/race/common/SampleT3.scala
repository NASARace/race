/*
 * Copyright (c) 2018, United States Government, as represented by the
 * Administrator of the National Aeronautics and Space Administration.
 * All rights reserved.
 *
 * The RACE - Runtime for Airspace Concept Evaluation platform is licensed
 * under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gov.nasa.race.common

import gov.nasa.race.common.Nat.N3

/**
  * helper class to generate T3 test data
  */
class SampleT3 extends TDataSource3 {
  val data = Array[(Long,Double,Double,Double)](
    (1545265794210L, 37.37403009777832, -122.11855982189941, 1767.8399658203125),
    (1545265799397L, 37.38000009899903, -122.12082956677246, 1706.8800048828125),
    (1545265803475L, 37.38486002331543, -122.12266062145996, 1676.4000244140625),
    (1545265806710L, 37.389529928024295, -122.1243200147705, 1645.9200439453125),
    (1545265811536L, 37.39433000927735, -122.12589929943847, 1615.43994140625),
    (1545265815622L, 37.39918993359375, -122.12757013684082, 1554.47998046875),
    (1545265820103L, 37.40457008724976, -122.1293306196289, 1524.0),
    (1545265823290L, 37.40911005383301, -122.1308297956543, 1524.0),
    (1545265824993L, 37.41027997380066, -122.1311902845459, 1524.0),
    (1545265828110L, 37.41372011547852, -122.13233087902832, 1493.52001953125),
    (1545265833248L, 37.41974995976258, -122.13427065258789, 1493.52001953125),
    (1545265836590L, 37.423969968612674, -122.13576029187011, 1463.0400390625),
    (1545265841040L, 37.42817996388245, -122.13708971386718, 1463.0400390625),
    (1545265845690L, 37.433170064743045, -122.1388406599121, 1432.56005859375),
    (1545265864431L, 37.45282004719544, -122.14585016613769, 1341.1199951171875),
    (1545265868368L, 37.4569001043396, -122.14750955944824, 1341.1199951171875),
    (1545265871630L, 37.46097992306519, -122.1492395246582, 1310.6400146484375),
    (1545265876623L, 37.465189918334964, -122.15113924389648, 1310.6400146484375),
    //(1545265876623L, 37.465189918334964, -122.15113924389648, 1310.6400146484375),
    (1545265879100L, 37.46901009922791, -122.15286920910644, 1280.1600341796875),
    (1545265885592L, 37.4739899480896, -122.15519998913574, 1249.6800537109375),
    (1545265889681L, 37.4778699720459, -122.1569299543457, 1249.6800537109375),
    (1545265893020L, 37.48149989491272, -122.15849016552734, 1249.6800537109375),
    (1545265897920L, 37.48552010899353, -122.15989015942382, 1219.199951171875),
    (1545265898693L, 37.486170038040164, -122.16006945019531, 1219.199951171875),
    (1545265902881L, 37.49012993222046, -122.16107080822754, 1219.199951171875),
    (1545265907920L, 37.49473999386597, -122.16224001293945, 1188.719970703125),
    (1545265912799L, 37.49915002232361, -122.16340921765136, 1158.239990234375),
    (1545265915774L, 37.501749976928714, -122.16405008679199, 1158.239990234375),
    (1545265917591L, 37.50337003117371, -122.16450022106933, 1158.239990234375),
    (1545265922428L, 37.50759004002381, -122.16566942578125, 1127.760009765625),
    (1545265927418L, 37.511810048873905, -122.16690920239257, 1127.760009765625),
    (1545265930640L, 37.51505993252564, -122.16780947094726, 1097.280029296875),
    (1545265936435L, 37.51921008473206, -122.16906069165039, 1066.800048828125),
    (1545265941269L, 37.523040040786746, -122.17022035961914, 1036.3199462890625),
    (1545265945444L, 37.526269897277835, -122.17151926403808, 975.3599853515625),
    (1545265949533L, 37.52910993939209, -122.1738805616455, 975.3599853515625),
    (1545265954319L, 37.532309993560794, -122.17723940258789, 944.8800048828125),
    (1545265958495L, 37.53486989384461, -122.18064974194336, 914.4000244140625),
    (1545265962130L, 37.53696010952759, -122.18406008129882, 883.9199829101562),
    (1545265966140L, 37.53906010037232, -122.18788050061035, 883.9199829101562)
  )

  override def size: Int = data.length
  override def getT(i: Int): Long = data(i)._1
  override def getDataPoint(i: Int, p: TDataPoint3): TDataPoint3 = {
    val d = data(i)
    p.set(d._1,d._2,d._3,d._4)
  }
  override def newDataPoint: TDataPoint3 = new TDataPoint3(0,0,0,0)


  def interpolateLin: LinTInterpolant[N3,TDataPoint3] = new LinTInterpolant[N3,TDataPoint3](this)
  def interpolateFH: FHTInterpolant[N3,TDataPoint3] = new FHTInterpolant[N3,TDataPoint3](this)
}
