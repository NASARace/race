// confg to replay archived SWIM (SFDPS,ASDE-X,TFM,ITWS) and ADS-B (SBS) data
// This assumes the data is stored in <data>/<date>/*.gz files, with <data> specifying the root-directory
// for recorded data, and <date> specifying the recording start date. This date has to be specified on the command
// line as a Java property, e.g.
//     ./race -Drace.date="2016-03-25T13:00:45" config/replay/swim-sbs-replay-ww.conf

// if <data> is not set, we assume tmp/, which is also where
//     ./race config/air/swim-all-sbs-archive.conf
// would store the archives

name = "swim-sbs-replay-ww"

race.data = "tmp"

data-dir = ${race.data}"/"${race.date}
start-time = ${race.date}

actors = [
  //----------------- sfdps
  { name = "sfdpsReplay"
    class = ".actor.ReplayActor"
    write-to = "/swim/sfdps"
    pathname = ${data-dir}"/sfdps.xml.gz"
    archive-reader = ".archive.TextArchiveReader"
    buffer-size = 32768
    optional = true
  },
  { name = "nasf2fpos"
    class = ".actor.TranslatorActor"
    read-from = "/swim/sfdps"
    write-to = "/flights/live/fpos"
    translator = {
      class = ".air.translator.FIXM2FlightObject"
    }
  },

  { name = "tfmdataReplay"
    class = ".actor.ReplayActor"
    write-to = "/swim/tfmdata"
    pathname = ${data-dir}"/tfmdata.xml.gz"
    archive-reader = ".archive.TextArchiveReader"
    buffer-size = 32768
    optional = true
  },
  { name = "tfm2track"
    class = ".actor.TranslatorActor"
    read-from = "/swim/tfmdata"
    write-to = "/flights/live/tfmtracks"
    translator = {
      class = ".air.translator.TfmDataService2TFMTracks"
    }
  },

  { name = "finfoStore"
    class = ".air.actor.FlightInfoStoreActor"
    read-from = "/swim/tfmdata"
    write-to = "/flightinfo"
  },

  { name = "taisReplay"
    class = ".air.actor.TAISReplayActor"
    write-to = "/swim/tais"
    pathname = ${data-dir}"/tais.xml.gz"
    archive-reader = ".archive.TextArchiveReader"
    buffer-size = 32768
    optional = true
  },
  { name = "tais2track"
    class = ".actor.TransitiveOnDemandTranslator"
    read-from = "/swim/tais"
    write-to = "/tracon/live/tracks"
    translator = {
      class = ".air.translator.TATrackAndFlightPlan2TATrack"
    }
  },

  //----------------- asdex
  { name = "asdexreplay"
    class = ".air.actor.AsdexReplayActor"
    write-to = "/swim/asdex"
    pathname = ${data-dir}"/asdex.xml.gz"
    archive-reader = ".archive.TextArchiveReader"
    buffer-size = 32768
    optional = true
  },
  { name = "asdex2Airport"
    class = ".actor.TransitiveOnDemandTranslator"
    read-from = "/swim/asdex"
    write-to = "/airports/live/tracks"
    translator = {
      class = ".air.translator.AsdexMsg2FullAsdexTracks"
    }
  },

  //----------------- itws
  { name = "itwsreplay"
    class = ".actor.ReplayActor"
    write-to = "/swim/itws"
    pathname = ${data-dir}"/itws.xml.gz"
    archive-reader = ".archive.TextArchiveReader"
    buffer-size = 32768
    optional = true
  },
  { name = "itwsPrecip"
    class = ".air.actor.RoutingPrecipImageTranslatorActor"
    read-from = "/swim/itws"
    write-to = "/weather/precip"
  },

  //----------------- ADS-B (KSFO)
  { name = "sbsReplay"
    class = ".actor.ReplayActor"
    pathname = ${data-dir}"/sbs.txt.gz"
    write-to = "/adsb/sbs"
    archive-reader = ".air.SBSArchiveReader"
    buffer-size = 32768
    optional = true
  },
  { name = "sbs2fpos"
    class = ".actor.TranslatorActor"
    read-from = "/adsb/sbs"
    write-to = "/flights/live/adsb"
    translator = {
      class = ".air.translator.SBS2FlightPos"
      temp-cs = false // FlightPosLayer doesn't handle renames yet
    }
  },
  { name = "fposDropper"
    class = ".air.actor.FlightDropperActor"
    read-from = "/flights/live/adsb"
    write-to = "/flights/live/adsb" // yes, we can write to the same channel
    drop-after = "30 seconds" // sim time
  },

  //----------------- viewer
  { name = "GeoViewer"
    class = ".ww.RaceViewerActor"

    collapse-panels = ["sync"]
    layer-categories = ["data"]

    layers = [ // order does matter since it defines Z-order
      { name = "precipLR"
        class = ".ww.air.WeatherLayer"
        read-from = "/weather/precip/9905"
        description = "ITWS long range precipitation"
      },
      { name = "precipTRACON"
        class = ".ww.air.WeatherLayer"
        read-from = "/weather/precip/9850"
        description = "ITWS TRACON precipitation"
        max-altitude = 10000000
      },
      { name = "precip5nm"
        class = ".ww.air.WeatherLayer"
        read-from = "/weather/precip/9849"
        description = "ITWS 5nm precipitation"
        max-altitude = 500000
      },

      { name = "liveTFMPos"
        class = ".ww.air.TfmTracksLayer"
        read-from = "/flights/live/tfmtracks"
        description = "SWIM tfmdata tracks"
        flightinfo-base = "/flightinfo"
        color = "magenta"
        enable = false
      },

      { name = "livePos"
        class = ".ww.air.FlightPosLayer"
        read-from = "/flights/live/fpos"
        description = "SWIM sfdps flight positions"
        flightinfo-base = "/flightinfo"
        color = "red"
      },

      { name = "liveTracks"
        class = ".ww.air.TATracksLayer"
        read-from = "/tracon/live/tracks"
        description = "TAIS tracks"
        categories = ["data"]
        enable = false
        color = "green"
      },

      { name = "liveAdsbPos"
        class = ".ww.air.FlightPosLayer"
        read-from = "/flights/live/adsb"
        description = "ADS-B flight positions"
        flightinfo-base = "/flightinfo"
        color = "cyan"
        enable = false
        max-altitude = 600000
      },

      { name = "airport"
        class = ".ww.air.AsdexTracksLayer"
        read-from = "/airports/live/tracks"
        description = "SWIM asdex airport tracks"
      }

    ]
    size = [1400, 1000]
    cache-dir = ${user.home}"/.WorldWind"
  }
]

include classpath("config/logging-race.conf")
