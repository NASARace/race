// example of how to replay archived SWIM and ADS-B data. This assumes the data
//      ./race -Drace.date="2016-03-25T13:00:45" config/replay/swim-sbs-replay-ww.conf
// to be stored in ../data/ i.e. outside of this repository

name = "swim-sbs-replay-ww"

data-dir = "../data/"${race.date}
start-time = ${race.date}

actors = [
  //----------------- sfdps
  { name = "sfdpsReplay"
    class = ".actors.imports.ReplayActor"
    write-to = "/swim/sfdps"
    pathname = ${data-dir}"/sfdps.xml.gz"
    archive-reader = ".data.TextArchiveReader"
    buffer-size = 32768
  },
  { name = "nasf2fpos"
    class = ".actors.translators.TranslatorActor"
    read-from = "/swim/sfdps"
    write-to = "/flights/live/fpos"
    translator = {
      name = "NasFlight2FlightPos"
      class = ".data.translators.FIXM2FlightObject"
    }
  },

  { name = "tfmdataReplay"
    class = ".actors.imports.ReplayActor"
    write-to = "/swim/tfmdata"
    pathname = ${data-dir}"/tfmdata.xml.gz"
    archive-reader = ".data.TextArchiveReader"
    buffer-size = 32768
  },
  { name = "tfm2track"
    class = ".actors.translators.TranslatorActor"
    read-from = "/swim/tfmdata"
    write-to = "/flights/live/tfmtracks"
    translator = {
      class = "gov.nasa.race.data.translators.TfmDataService2TFMTracks"
    }
  },

  { name = "finfoStore"
    class = ".actors.stores.FlightInfoStoreActor"
    read-from = "/swim/tfmdata"
    write-to = "/flightinfo"
  },

  //----------------- asdex
  { name = "asdexreplay"
    class = ".actors.imports.AsdexReplayActor"
    write-to = "/swim/asdex"
    pathname = ${data-dir}"/asdex.xml.gz"
    archive-reader = ".data.TextArchiveReader"
    buffer-size = 32768
  },
  { name = "asdex2Airport"
    class = ".actors.translators.TransitiveOnDemandTranslator"
    read-from = "/swim/asdex"
    write-to = "/airports/live/tracks"
    translator = {
      class = "gov.nasa.race.data.translators.AsdexMsg2AirportTracks"
    }
  },

  //----------------- itws
  { name = "itwsreplay"
    class = ".actors.imports.ReplayActor"
    write-to = "/swim/itws"
    pathname = ${data-dir}"/itws.xml.gz"
    archive-reader = ".data.TextArchiveReader"
    buffer-size = 32768
  },
  { name = "itwsPrecip"
    class = ".actors.translators.RoutingPrecipImageTranslatorActor"
    read-from = "/swim/itws"
    write-to = "/weather/precip"
  },

  //----------------- ADS-B (KSFO)
  { name = "sbsReplay"
    class = ".actors.imports.ReplayActor"
    pathname = ${data-dir}"/sbs.txt.gz"
    write-to = "/adsb/sbs"
    archive-reader = ".data.SBSArchiveReader"
    buffer-size = 32768
  },
  { name = "sbs2fpos"
    class = ".actors.translators.TranslatorActor"
    read-from = "/adsb/sbs"
    write-to = "/flights/live/adsb"
    translator = {
      class = "gov.nasa.race.data.translators.SBS2FlightPos"
      temp-cs = false // FlightPosLayer doesn't handle renames yet
    }
  },
  { name = "fposDropper"
    class = ".actors.injectors.FlightDropperActor"
    read-from = "/flights/live/adsb"
    write-to = "/flights/live/adsb" // yes, we can write to the same channel
    drop-after = "30 seconds" // sim time
  },

  //----------------- viewer
  { name = "GeoViewer"
    class = ".ww.RaceViewerActor"

    collapse-panels = ["sync"]
    layer-categories = ["data"]

    layers = [ // order does matter since it defines Z-order
      { name = "precipLR"
        class = ".ww.layers.WeatherLayer"
        read-from = "/weather/precip/9905"
        description = "ITWS long range precipitation"
      },
      { name = "precipTRACON"
        class = ".ww.layers.WeatherLayer"
        read-from = "/weather/precip/9850"
        description = "ITWS TRACON precipitation"
        max-altitude = 10000000
      },
      { name = "precip5nm"
        class = ".ww.layers.WeatherLayer"
        read-from = "/weather/precip/9849"
        description = "ITWS 5nm precipitation"
        max-altitude = 500000
      },

      { name = "liveTFMPos"
        class = ".ww.layers.TfmTracksLayer"
        read-from = "/flights/live/tfmtracks"
        description = "SWIM tfmdata tracks"
        flightinfo-base = "/flightinfo"
        color = "magenta"
        enable = false
      },

      { name = "livePos"
        class = ".ww.layers.FlightPosLayer"
        read-from = "/flights/live/fpos"
        description = "SWIM sfdps flight positions"
        flightinfo-base = "/flightinfo"
        color = "red"
      },

      { name = "liveAdsbPos"
        class = ".ww.layers.FlightPosLayer"
        read-from = "/flights/live/adsb"
        description = "ADS-B flight positions"
        flightinfo-base = "/flightinfo"
        color = "cyan"
        enable = false
        max-altitude = 300000
      },

      { name = "airport"
        class = ".ww.layers.AirportTracksLayer"
        read-from = "/airports/live/tracks"
        description = "SWIM asdex airport tracks"
      }

    ]
    size = [1400, 1000]
    cache-dir = ${user.home}"/.WorldWind"
  }
]

include classpath("config/logging-race.conf")
