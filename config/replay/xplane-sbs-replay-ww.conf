// config to show X-Plane flight simulator position and replayed SBS (ADS-B) data in WorldWind viewer

// This assumes the data is stored in a <data>/<date>/sbs.txt.gz file, with <data> specifying the root-directory
// for recorded data, and <date> specifying the recording start date. This date has to be specified on the command
// line as a Java property, e.g.
//     ./race -Drace.date="2016-07-03T13:49:04" config/replay/xplane-sbs-replay-ww.conf

// if <data> is not set, we assume tmp/, which is also where
//     ./race config/air/sbs-archive.conf
// stores the archive by default

// communication with the X-Plane flight simulator (which has to be started prior to running this config) is
// configured through
//   race.host - own IP address (X-Plane has to connect to)
//   xplane.host - the ip address where X-Plane is running
// if nothing is set, both assume localhost by default

race.data = "tmp"

data-dir = ${race-data}"/"${race.date}
race.host = "localhost"
xplane.host = "localhost"

universe = {
  name = "xplane-sbs-replay-ww"
  start-time = ${race.date}

  actors = [
    //--- ADS-B (KSFO)
    { name = "sbsReplay"
      class = ".actor.ReplayActor"
      write-to = "/adsb/sbs"
      reader = {
        class = ".air.SBSArchiveReader"
        pathname = ${data-dir}"/sbs.txt.gz"
        buffer-size = 32768
      }
    },
    { name = "sbs2fpos"
      class = ".actor.TranslatorActor"
      read-from = "/adsb/sbs"
      write-to = "/flights/live/adsb"
      translator = {
        class = ".air.translator.SBS2FlightPos"
        temp-cs = false // FlightPosLayer doesn't handle renames yet
      }
    },
    { name = "fposDropper"
      class = ".actor.TrackDropperActor"
      read-from = "/flights/live/adsb"
      write-to = "/flights/live/adsb"
      drop-after = "20 seconds" // sim time
    },

    //--- the X-Plane bridge actor that imports from/exports to the flight simulator
    { name = "xplane"
      class = ".air.xplane.XPlaneActor"

      read-from = "/flights/live/adsb"
      write-to = "/flights/sim/xplane"

      own-ip-address = ${race.host} // "192.168.0.10"     // the address X-Plane has to connect to
      remote-ip-address = ${xplane.host}  // "192.168.0.11"  // where X-Plane is running

      //interval = 1s
      airport = "KSJC"
      aircraft {
        type = "Aircraft/General Aviation/Cirrus TheJet/c4.acf"
        id = "1234567"
        cs = "X42"
      }

      proximity-range = 10.0
      other-aircraft = [
        //{ type = "Aircraft/Heavy Metal/B747-100 NASA/B747-100 NASA.acf" },
        { type = "Aircraft/Heavy Metal/KC-10/KC-10.acf"},
        { type = "Aircraft/Heavy Metal/C-130/C-130.acf"},
        //{ type = "Aircraft/General Aviation/Cirrus TheJet/c4.acf"}
      ]
    },

    //--- viewer
    { name = "GeoViewer"
      class = ".ww.RaceViewerActor"

      collapse-panels = ["sync"]
      layer-categories = ["data"]

      eye {  // Bay Area
        lat = 37.41
        lon = -122.007
        altitude-ft = 90000
      }

      layers = [ // order does matter since it defines Z-order
        { name = "liveAdsbPos"
          class = ".ww.air.FlightPosLayer"
          read-from = "/flights/live/adsb"
          description = "ADS-B flight positions"
          color = "cyan"
          enable = true
          max-altitude = 200000
        },

        { name = "xplanePos"
          class = ".ww.air.FlightPosLayer"
          read-from = "/flights/sim/xplane"
          description = "sim flight positions"
          color = "red"
          enable = true
          max-altitude = 200000
        }
      ]
    }
  ]

  include classpath("config/logging-race.conf")
}

