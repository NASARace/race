// server adapter example with proximity

name = "server-adapter-ww"

local1.host = "127.0.0.1"
local1.port = "50036"
remote1.host = "127.0.0.1"

local2.host = "127.0.0.1"
local2.port = "50038"
remote2.host = "127.0.0.1"

track.type = "ExtendedTrack"

actors = [
  { name = "simpleAc"
    class = ".air.actor.SimpleAircraft"
    tick-interval = 1s
    write-to = "flights/internal"

    id = "1"
    cs = "SAC1"
    lat = 37.252
    lon = -121.9
    altitude-ft = 8000
    heading = 190
    speed-kn = 300.0
  },

  { name = "adapter1"
    class = ".actor.ServerAdapterActor"
    write-to = "flights/external1"    // where received data gets published
    read-from = "reports/proximities1"  // where we get data from that we send out
    //loglevel = "info"
    optional = true

    own-ip-address = ${local1.host}
    own-port = ${local1.port}
    remote-ip-address = ${remote1.host} // only accept connections from this host

    schema = "gov.nasa.race.air."${track.type}"Protocol"
    reader.class = ".air."${track.type}"Reader"
    writer.class = ".air."${track.type}"Writer"
  },
  { name = "proximizer1"
    class = ".actor.DynamicProximityActor"
    read-from = ["flights/internal","flights/external1","flights/external2"]
    read-ref-from = "flights/external1"
    write-to = "reports/proximities1"
    distance-nm = 25
  },
  { name = "proximityReporter1"
    class = ".actor.ProbeActor"
    read-from = "reports/proximities1"
  },

  { name = "adapter2"
    class = ".actor.ServerAdapterActor"
    write-to = "flights/external2"    // where received data gets published
    read-from = "reports/proximities2"  // where we get data from that we send out
    //loglevel = "info"
    optional = true

    own-ip-address = ${local2.host}
    own-port = ${local2.port}
    remote-ip-address = ${remote2.host} // only accept connections from this host

    schema = "gov.nasa.race.air."${track.type}"Protocol"
    reader.class = ".air."${track.type}"Reader"
    writer.class = ".air."${track.type}"Writer"
  },
  { name = "proximizer2"
    class = ".actor.DynamicProximityActor"
    read-from = ["flights/internal","flights/external1"]
    read-ref-from = "flights/external2"
    write-to = "reports/proximities2"
    distance-nm = 25
  },

  { name = "geoViewer"
    class = ".ww.RaceViewerActor"

    layer-categories = ["data"]
    collapse-panels = ["sync"]
    run-control = true

    layers = [
      { name = "areas"
        class = ".ww.AreaLayer"
        enabled = false
        areas = [
          { name = "Bay Area"
            class = ".ww.CircularArea"
            color = "#00000060"
            lat = 37.25
            lon = -122.00
            radius = 50nm
          }
        ]
      },
      { name = "internal"
        class = ".ww.air.FlightPosLayer"
        read-from = "flights/internal"
        description = "internal"
        categories = ["data"]
        enabled = true
        color = "cyan"
      },
      { name = "external1"
        class = ".ww.air.FlightPosLayer"
        read-from = "flights/external1"
        description = "external 1"
        categories = ["data"]
        enabled = true
        color = "red"
      },
      { name = "external2"
        class = ".ww.air.FlightPosLayer"
        read-from = "flights/external2"
        description = "external 2"
        categories = ["data"]
        enabled = true
        color = "yellow"
      }
    ]

    size = [1600,1200]
    eye {
      lat = 37.39
      lon = -121.846
      altitude-ft = 500000
    }

    cache-dir = ${user.home}"/.WorldWind"
  }
]

include classpath("config/logging-race.conf")