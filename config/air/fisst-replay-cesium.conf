name = "fisst-replay"

show-exceptions = true
start-time = "2020-02-01T00:33:00Z"
time-scale = 10.0
cache.dir = ${user.home}"/cache"
archive = "../data/FISST_deviation_sample_data.csv"

actors = [
  {
    name = "httpServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "9000"
    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "fisst"
        class = "gov.nasa.race.cesium.CesiumTrackApp"
        access-token = "??cesium.access-token"

        // resource origins and cache dirs
        cesium-cache = ${cache.dir}"/cesium/current"
        cache-dir = ${cache.dir} // for general proxied requests

        proxy-maptile-provider = true
        //maptile-provider = "http://tile.stamen.com/terrain"
        maptile-provider = "https://services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/"

        proxy-elevation-provider = true
        elevation-provider = "https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer"

        channel-map = ["/fisst: fisst"] // channel -> channel-key

        track.colors = ["fisst: yellow"]  // channel-key -> color map
        track.assets = [ "model: generic_track.glb" ] // sent as key list, referenced in serialized tracks

        eye = {
          lon = -57.9
          lat = 16.9
          alt = 750000
        }

        read-from = ["/fisst"]
      }
    ]
  },

  { name = "replayer"
    class = ".actor.ReplayActor"

    write-to = "/fisst"

    reader = {
      class = ".air.FISSTArchiveReader"
      pathname = ${archive}
      buffer-size = 8192
    }
    //can-reset-clock = true
  }
]

include classpath("config/logging-race.conf")
include classpath("config/http-race.conf")