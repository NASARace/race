// a config that imports a 'sfdps' topic from a Kafka server and visualizes the respective flight messages in a RaceViewer
//
// start in the following sequence:
//    terminal-1:  script/kafkaserver --topic sfdps
//    terminal-2:  ./race config/air/swim-sfdps-kafka-import-ww.conf
//    terminal-3:  ./race --vault <vault-file> config/air/swim-sfdps-kafka-export.conf

name = "swim-sfdps-kafka-import-ww"

actors = [

  { name = "kafkaImporter"
    class = "gov.nasa.race.kafka.KafkaImportActor"
    write-to = "/swim/sfdps"

    consumer {
      class = "gov.nasa.race.kafka.NonKeyedStringConsumer"
      kafka-topics = ["sfdps"]
    }
  },

//  { name = "probe"
//    class = ".actor.ProbeActor"
//    read-from = "/swim/sfdps"
//  },

  { name = "dispatcher"
    class = ".actor.Dispatcher"
    read-from = "/swim/sfdps"
    replication = 4

    worker = {
      name = "nasf2fpos"
      class = ".actor.TranslatorActor"
      write-to = "/live/sfdps"
      translator = {
        class = ".air.translator.MessageCollectionParser"
      }
    }
  },

  { name = "GeoViewer"
    class = ".ww.RaceViewerActor"
    collapse-panels = ["clock", "sync"]
    layer-categories = ["data"]

    layers = [
      { name = "liveSFDPS"
        class = ".ww.air.FlightPosLayer"
        read-from = "/live/sfdps"
        description = "SWIM sfdps flight positions"
        trackinfo-base = "/trackinfo"
        color = "red"
      }
    ]

    size = [1600,1200]
    eye {
      lat = 37.246822
      lon = -121.9770277
      altitude-ft = 2400000
    }

    cache-dir = ${user.home}"/.WorldWind"
  }
]

kafka.consumer {
  zookeeper.connection.timeout.ms = "10000"
  auto.commit.enable = "false"
  zookeeper.session.timeout.ms = "1000"
  zookeeper.sync.time.ms =  "1000"
  consumer.timeout.ms =  "400"
}

include classpath("config/logging-race.conf")