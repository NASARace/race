// generic SWIM-only import & display configuration
//
// NOTE this requires the following adaptations in order to run:
//   (1) SWIM server (JMS broker) URL, e.g. "tcp://localhost:61616" if running with ssh port forwarding
//   (2) SWIM server user credentials
//   (3) SWIM JMS topics
//
// If the host has to be accessed through a gateway, you can port forward by running
// ssh from another terminal window like
//    ssh -L61616:<remote-host>:61616 <user>@<gateway-host>

// (1) replace this with local settings, or override from the command line like
//    ./race -Dswim.user=<your-id> -Dswim.pw=<your-pw> ...
swim {
  host = "tcp://localhost:61616"
  user = "my-uid"
  pw = "my-pw"
}

name = "swim-direct-ww"

actors = [
  //--- SWIM SFDPS
  { name = "sfdps-jmsImporter"
    class = ".jms.JMSImportActor"
    broker-uri = ${swim.host}
    user = ${swim.user}
    pw = ${swim.pw}
    jms-topic = "nasa.topic05.sfdps"   // <<< (2) replace with your SFDPS topic
    write-to = "/swim/sfdps"
  },
  { name = "dispatcher"
    class = ".actor.Dispatcher"
    read-from = "/swim/sfdps"
    replication = 4

    worker = {
      name = "fixm2fpos"
      class = ".actor.TranslatorActor"
      write-to = "/live/sfdps"
      translator = {
        class = ".air.translator.FIXM2FlightObject"
      }
    }
  },

  //--- SWIM TFMDATA
  { name = "tfmdata-jmsImporter"
    class = ".jms.JMSImportActor"
    broker-uri = ${swim.host}
    user = ${swim.user}
    pw = ${swim.pw}
    jms-topic = "nasa.topic04.tfmdata"     // <<< (2) replace with your TFMDATA topic
    write-to = "/swim/tfmdata"
  },
  { name = "tfm2track"
    class = ".actor.TranslatorActor"
    read-from = "/swim/tfmdata"
    write-to = "/live/tfmdata"
    translator = {
      class = ".air.translator.TfmDataService2TFMTracks"
    }
  },
  
  { name = "tinfoStore"
    class = ".actor.TrackInfoStoreActor"
    read-from = [ "/swim/tfmdata" ]
    write-to = "/trackinfo"
    readers = [
      { class = ".air.TFMTrackInfoReader" }
    ]
  },

  //--- SWIM ITWS
  { name = "itws-jmsImporter"
    class = ".jms.JMSImportActor"
    broker-uri = ${swim.host}
    user = ${swim.user}
    pw = ${swim.pw}
    jms-topic = "nasa.topic03.itws"     // <<< (2) replace with your ITWS topic
    write-to = "/swim/itws"

    filters = [ // example of point-of-entry (pre-bus) filter
      { name = "precipFilter"
        class = ".common.RegexFilter"
        regex = ["<precip>"]
      }
    ]
  },
  { name = "itwsPrecip"
    class = ".air.actor.RoutingPrecipImageTranslatorActor"
    read-from = "/swim/itws"
    write-to = "/precip"
  },

  //--- SWIM ASDE-X (on demand chain)
  { name = "asdexImporter"
    class = ".air.actor.AsdexImportActor"
    broker-uri = ${swim.host}
    user = ${swim.user}
    pw = ${swim.pw}
    jms-topic = "nasa.topic01.asdex"     // <<< (2) replace with your ASDE-X topic
    write-to = "/swim/asdex"
  },
  { name = "asdex2Airport"
    class = ".actor.TransitiveOnDemandTranslator"
    read-from = "/swim/asdex"
    write-to = "/airport/tracks"
    translator = {
      class = ".air.translator.AsdexMsg2AsdexTracks"
    }
  },

  //--- WorldWind
  { name = "GeoViewer"
    class = ".ww.RaceViewerActor"
    collapse-panels = ["clock", "sync"]
    layer-categories = ["data"]

    layers = [
      //--- itws precipitation layers
      { name = "precipLR"
        class = ".ww.air.WeatherLayer"
        read-from = "/precip/9905"
        description = "ITWS long range precipitation"
      },
      { name = "precipTRACON"
        class = ".ww.air.WeatherLayer"
        read-from = "/precip/9850"
        description = "ITWS TRACON precipitation"
        max-altitude = 10000000
      },
      { name = "precip5nm"
        class = ".ww.air.WeatherLayer"
        read-from = "/precip/9849"
        description = "ITWS 5nm precipitation"
        max-altitude = 500000
      },

      { name = "airport"
        class = ".ww.air.AirportTracksLayer"
        read-from = "/airport/tracks"
        description = "SWIM asdex airport tracks"
      },

      //--- tfmdata tracks
      { name = "liveTFM"
        class = ".ww.air.TfmTracksLayer"
        read-from = "/live/tfmdata"
        description = "SWIM tfmdata tracks"
        trackinfo-base = "/trackinfo"
        color = "magenta"
        enable = false
      },

      //--- sfdps flight positions and tracks
      { name = "liveSFDPS"
        class = ".ww.air.FlightPosLayer"
        read-from = "/live/sfdps"
        description = "SWIM sfdps flight positions"
        trackinfo-base = "/trackinfo"
        color = "red"
      }
    ]

    //fullscreen = true
    size = [1600,1200]
    eye {
      lat = 39.24777
      lon = -98.5768
      altitude-ft = 18000000
    }

    cache-dir = ${user.home}"/.WorldWind"
  }

]

include classpath("config/logging-race.conf")
