// example of how to run JMS importer on real swim server with encrypted config
// to retrieve and parse TAIS messages.
// This requires a encrypted config vault to access SWIM
// run with:
//    script/race --vault=<encrytped-config> config/air/swim-tais.conf

name = "swim-tais"
show-exceptions = true

actors = [
  { name = "portMapper"
    class = ".actor.PortForwarder"
    user = "??gw.user"
    host = "??gw.host"
    forward = "??gw.forward"
    krb5 = {
      conf = "??gw.krb5.conf"
      //realm = "??gw.krb5.realm"
      //kdc = "??gw.krb5.kdc"
    }
    create-timeout = 20s
  },

  { name = "importer"
    class = ".air.actor.TaisImportActor"
    broker-uri = "??swim.uri.tais"
    user = "??swim.user"
    pw = "??swim.pw"
    jms-topic = "nasa.topic08.tais"
    write-to = "/tracks"
    flatten = true
    served-topics = "NCT"
  },

  { //----------------- probe actor that prints received messages on the screen
    name = "probe"
    class = ".actor.ProbeActor"
    read-from = "/tracks"
  }
]

include classpath("config/logging-race.conf")