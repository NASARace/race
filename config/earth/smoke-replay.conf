name = "smoke_CZU_demo"
cache.dir = "../cache"
data.dir = "../race-data/"
show-exceptions = true
start-time = "2020-08-19T14:57:00PST"
#start-time = "2020-08-16T00:00:00.005Z"
#time-scale = 100  #fast-forwarding ...
archive-g17 = ${data.dir}"/odin-czu-081620/OR_ABI-L2-FDCC-G17_s20200816-050412_e20200823-055910.csv.gz"
archive-g16 = ${data.dir}"/odin-czu-081620/OR_ABI-L2-FDCC-G16_s20200816-100421_e20200824-000001.csv.gz"


actors = [
  { name = "smokeSegmentationActor"
    class = ".earth.actor.SmokeSegmentationImportActor"
    write-to = "/smoke"
    read-from = "/goes-r-images"
    api-port = "http://localhost:5000/predict"
    api-exe = "race-earth/src/main/python/smoke-segmentation/api_tif.py"
    api-cwd = "race-earth/src/main/python/smoke-segmentation"
    data-dir = ${data.dir}"/smoke-segmentation"
    python-exe = ${user.home}"/Anaconda3/envs/odin/python.exe" // python executable with gdal2tiles and gdal installed
    gdal2tiles-driver = "race-earth/src/main/python/gdal2tiles/gdal2tiles-driver.py"
    archive = "false"
  }
  {
    name = "SmokeProbe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "/smoke"
  }
  {
    name = "goesTrueColorReplayer"
    class = ".earth.actor.GoesTrueColorReplayActor"
    directory =  ${data.dir}"/goesr-truecolor/CZU-mini-demo"
    write-to = "/goes-r-images"
    file-pattern = ".*\\.tif"
  },
  {
      name = "ReplayerProbe"
      class = "gov.nasa.race.actor.ProbeActor"
      read-from = "/goes-r-images"
    }
  {
    name = "goesWestReplayer"
    class = ".earth.actor.GoesrHotspotReplayActor"
    write-to = "/goes-r"

    pathname = ${archive-g17}
    buffer-size = 32768

    satellite = 43226
    history = 3d
  },

  {
    name = "goesEastReplayer"
    class = ".earth.actor.GoesrHotspotReplayActor"
    write-to = "/goes-r"

    pathname = ${archive-g16}
    buffer-size = 32768

    satellite = 41866
    history = 3d
  },
  {
      name = "httpServer"
      class = "gov.nasa.race.http.HttpServer"

      host = "localhost"
      port = "9000"
      //log-incoming = true

      ws-keep-alive = 30s

      routes = [
        { // name is used as default if request-prefix is not specified
          name = "odin"
          class = ".cesium.SmokeDemoApp"
          access-token = "??cesium.access-token" // not required for this demo

          read-from = ["/goes-r"]

          cache-dir = ${cache.dir} // for general proxied requests
          request-render = true

          ui-themes = [
            { name="dark", path="ui_theme_dark.css"},
            { name="day", path="ui_theme_day.css"},
            { name="night", path="ui_theme_night.css"}
          ]
          goes-r = {
            satellites = [
              { sat-id = 43226, name = "G17", description = "GOES-West", show = true },
              { sat-id = 41866, name = "G16", description = "GOES-East", show = false }
            ]

            max-age = 7d // if pixel hasn not been updated in that time it is dropped
            max-history = 200 // we keep max 20 readings per pixel
            pixel-level = "all" // good, probable, all
            follow-latest = false
            lock-step = true

            time-steps = [
              { hours =  6, color = "#ff0000" },
              { hours = 12, color = "#c00000" },
              { hours = 24, color = "#802020" },
              { hours = 48, color = "#804040" }
            ]
          }
          imglayer = {

            sources = [
              {
                pathname = "globe/natgeo"
                info = "ArcGIS NatGeo Terrain"
                url = "https://services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/"
                exclusive = ["globe"]
                provider-class = ".cesium.ArcGisMapServerImageryProvider"
                proxy = true
                show = true
                render { brightness = 0.6 }
              },
              {
                pathname = "globe/bing-aerial",
                info = "Bing aerial default",
                url = ""
                provider-class = ".cesium.DefaultImageryProvider",
                exclusive = ["globe"]
                render = {
                  brightness = 1.0
                  contrast = 1.0
                  hue = 0.0
                }
              },
              {
                pathname = "globe/stamen-terrain"
                info = "Stamen Terrain"
                url = "http://tile.stamen.com/terrain/"
                provider-class = ".cesium.OpenStreetMapImageryProvider"
                exclusive = ["globe"]
                proxy = true
                //show = true
                render { brightness = 0.6 }
              },
              {
                  pathname = "goesR/smoke"
                  info = "GOES-R Smoke"
                  url = "tms/goesR-smoke"
                  dir = ${data.dir}"/smoke-segmentation/smoke"
                  provider-class = ".cesium.TileMapServiceImageryProvider"
              },
              {
                  pathname = "goesR/clouds"
                  info = "GOES-R Clouds"
                  url = "tms/goesR-clouds"
                  dir = ${data.dir}"/smoke-segmentation/cloud"
                  provider-class = ".cesium.TileMapServiceImageryProvider"
              }
            ]
            render = {
              alpha: 1.0
              brightness: 1.0
              contrast: 1.0
              hue: 0.0
              saturation: 1.0
              gamma: 1.0
            }
          },

          eye = {
            lon = -122.4
            lat = 37.6
            alt = 150000
          }
        }
      ]
    }
]
include classpath("config/http-race.conf")
include classpath("config/logging-race.conf")