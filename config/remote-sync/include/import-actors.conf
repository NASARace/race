
import-actors = [
  { name = "portmapper"
    class = ".actor.PortForwarder"
    user = "??gw.user"
    host = "??gw.host"
    forward = "??gw.forward"
  },

  //--- SWIM tfmdata
  { name = "tfmdata-jmsImporter"
    class = ".jms.JMSImportActor"
    broker-uri = "??swim.uri.tfmdata"
    user = "??swim.user"
    pw = "??swim.pw"
    write-to = "/local/swim/tfm"
    jms-topic = "nasa.topic04.tfmdata"
  },
  { name = "tfm2track"
    class = ".actor.TranslatorActor"
    read-from = "/local/swim/tfm"
    write-to = "/local/tfm"
    translator = {
      class = ".air.translator.TfmDataService2TFMTracks"
    }
  },

  { name = "tinfoStore"
    class = ".actor.TrackInfoStoreActor"
    read-from = [ "/local/swim/tfm" ]
    write-to = "/local/trackinfo"
    readers = [
      { class = ".air.TFMTrackInfoReader" }
    ]
  },

  //--- SWIM SFDPS
  { name = "sfdps-jmsImporter"
    class = ".jms.JMSImportActor"
    broker-uri = "??swim.uri.sfdps"
    user = "??swim.user"
    pw = "??swim.pw"
    write-to = "/local/swim/sfdps"
    jms-topic = "nasa.topic05.sfdps"
  },
  { name = "dispatcher"
    class = ".actor.Dispatcher"
    read-from = "/local/swim/sfdps"
    replication = 4

    worker = {
      name = "nasf2fpos"
      class = ".actor.TranslatorActor"
      write-to = "/local/sfdps"
      translator = {
        class = ".air.translator.FIXM2FlightObject"
      }
    }
  },

  //--- SWIM ITWS
  { name = "itws-jmsImporter"
    class = ".jms.JMSImportActor"
    broker-uri = "??swim.uri.itws"
    user = "??swim.user"
    pw = "??swim.pw"
    write-to = "/local/swim/itws"
    jms-topic = "nasa.topic03.itws"

    filters = [ // example of point-of-entry (pre-bus) filter
      { name = "precipFilter"
        class = ".common.RegexFilter"
        regex = ["<precip>"]
      }
    ]
  },
  { name = "itwsPrecip"
    class = ".air.actor.RoutingPrecipImageTranslatorActor"
    read-from = "/local/swim/itws"
    write-to = "/local/precip"
  },

  //--- SWIM TAIS (on demand chain)
  { name = "taisImporter"
    class = ".air.actor.TAISImportActor"  // don't use the .air.actor.TAISImportActor which is a ChannelTopicProvider
    broker-uri = "??swim.uri.tais"
    user = "??swim.user"
    pw = "??swim.pw"
    write-to = "/local/swim/tais"
    jms-topic = "nasa.topic08.tais"
  },
  { name = "tais2track"
    class = ".actor.TransitiveOnDemandTranslator"
    read-from = "/local/swim/tais"
    write-to = "/local/tais"
    translator = {
      class = ".air.translator.TATrackAndFlightPlan2TATrack"
    }
  },

  //--- SWIM ASDE-X (on demand chain)
  { name = "asdexImporter"
    class = ".air.actor.AsdexImportActor"
    broker-uri = "??swim.uri.asdex"
    user = "??swim.user"
    pw = "??swim.pw"
    write-to = "/local/swim/asdex" // default output channel, in case filter does not have write-to spec
    jms-topic = "nasa.topic01.asdex"
  },

  { name = "asdex2Airport"
    class = ".actor.TransitiveOnDemandTranslator"
    read-from = "/local/swim/asdex"
    write-to = "/local/airport/tracks"
    translator = {
      class = ".air.translator.AsdexMsg2AsdexTracks"
    }
  },

  //--- ADS-B
  { name = "sbsImporter"
    class = ".air.actor.AdsbImportActor"
    write-to = "/local/sbs"
  },
  { name = "sbs2fpos"
    class = ".actor.TranslatorActor"
    read-from = "/local/sbs"
    write-to = "/local/adsb"
    translator = {
      class = ".air.translator.SBS2FlightPos"
      temp-cs = false // FlightPosLayer doesn't handle renames yet
    }
  },
  { name = "fposDropper"
    class = ".actor.TrackDropperActor"
    read-from = "/local/adsb"
    write-to = "/local/adsb" // yes, we can write to the same channel
    drop-after = "20 seconds" // sim time
  }
]
