// example for starting remote actors:
// build with `sbt stage`, then:
//
//   (1) start satellite: script/race --info  (starts generic lauch daemon)
//   (2) start master:    script/race --info  config/remote-start/master.conf
//
//  the --info option is not required but shows the initialization process

include "../include/race.conf"
include "../include/race-remotes.conf"

universe = {
  name = "start-remote-aircraft"

  actors = [
    { //----------------- aircraft position generator (remotely running)
      name = "testAC"
      remote = ${race.remote.uri}   // (1) tells RACE this actor is remote
      class = "gov.nasa.race.air.actor.SimpleAircraft"  // (2) tells RACE how to create actor
      tick-interval = 5s
      write-to = "/fpos"  // the message bus channel this actor publishes to

      // aircraft parameters
      id = "557902201"
      cs = "XY333"
      lat = 37.246822
      lon = -121.9770277
      heading = 84.0
      altitude-ft = 5000
      speed-kn = 350.0
    },

    { //----------------- probe actor that prints received messages on the screen
      name = "probe"
      class = "gov.nasa.race.actor.ProbeActor"
      read-from = "/fpos"  // the message bus channels this actor subscribes to
    }
  ]

  //akka.actor.deployment {                           // this is automatically added by RACE
  //  "/start-remote-aircraft/testAC".remote = ${race.remote.uri}    // (3) tells Akka where to create actor
  //}

  include "../include/remoting.conf"
  include "../include/race-air-serializers.conf"

  include classpath("config/logging-race.conf")

  loglevel = info
}
