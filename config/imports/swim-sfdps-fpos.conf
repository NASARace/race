// example of how to run JMS importer on real swim server with encrypted config
// to retrieve sfdps data, translate them into FlightPos objects, and display
// them in a probe actor. This requires a encrypted config vault to access
// SWIM data
// run with:
//    script/race config/imports/swim-sfdps-fpos.conf

name = "swim-sfdps"

actors = [
  { name = "portMapper"
    class = ".actors.process.PortForwarder"
    user = "??gw.user"
    host = "??gw.host"
    forward = "??gw.forward"
  },

  //--- SWIM SFDPS
  { name = "sfdps-jmsImporter"
    class = ".actors.imports.JMSImportActor"
    broker-uri = "tcp://localhost:61616"
    user = "??swim.user"
    pw = "??swim.pw"
    write-to = "/swim/sfdps"
    jms-topic = "nasa.topic05.sfdps"
  },

  { name = "nasf2fpos"
    class = ".actors.translators.TranslatorActor"
    read-from = "/swim/sfdps"
    write-to = "/fpos"
    translator = {
      class = "gov.nasa.race.data.translators.FIXM2FlightObject"
    }
  },

  { //----------------- probe actor that prints received messages on the screen
    name = "probe"
    class = "gov.nasa.race.actors.viewers.ProbeActor"
    read-from = "/fpos"
  }
]

include classpath("config/logging-race.conf")

