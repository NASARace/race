// script to read and print messages received from a configured kafka server/topic
// make sure the server is running before executing this config like
//
//   ./race -Dkafka.server=<hostname:port> -Dkafka.group=<group> -Dkafka.topic=<topic> config/net/kafka-import.conf
//
// a simple test setup typically consists of the following sequence (in three different terminals):
//
//   T1:  > script/kafkaserver --topic test --clean
//   T2:  > ./race config/net/kafka-import.conf
//   T3:  > ./race config/net/kafka-export.conf

// override these from the command line as normal Java properties
// e.g. "./race -Dkafka.server=<your-server:port> ..."
kafka.server = "127.0.0.1:9092"
kafka.group = "race"
kafka.topic = "test"

name = "kafka-read"

actors = [
  { name = "kafkaImporter"
    class = "gov.nasa.race.kafka.KafkaImportActor"
    write-to = "/kafka/in"

    consumer {
      class = "gov.nasa.race.kafka.NonKeyedStringConsumer"
      bootstrap-servers = ${kafka.server}
      kafka-group = ${kafka.group}
      kafka-topics = [ ${kafka.topic} ]
    }
  },
  { name = "probe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "/kafka/in"
  }
]

//kafka.consumer {
//  zookeeper.connection.timeout.ms = "10000"
//  auto.commit.enable = "false"
//  zookeeper.session.timeout.ms = "1000"
//  zookeeper.sync.time.ms =  "1000"
//  consumer.timeout.ms =  "400"
//}

include classpath("config/logging-race.conf")
