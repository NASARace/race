// example of a terminal share provider node that is connected to an upstream integrator
//     open browser on url http://localhost:8082/share
// upstream server can be started with share-integrator.conf

name = "share-provider_1"
show-exceptions = true

site.dir = "race-net-http/src/main/resources/sites/share"

node     = "node_1"
site.dir = "race-net-http/src/main/resources/sites/share"
data.dir = "race-net-http-test/src/resources/sites/share/data/"${node}

archive = "../data/all-080717-1744/sbs.txt.gz"  // override with -Darchive=... from command line
cache.dir = ${user.home}"/cache"

actors = [
  {
    name = "upstreamConnector"
    class = "gov.nasa.race.http.share.UpstreamConnectorActor"

    // FIXME - this should work pw-less
    uid = ${node}  // normally from vault
    pw = "supersecret" // - " -

    sim-mode = true // do we support simulating connection loss

    read-from = "/share/out"  // what we send to upstream
    write-to = "/share/in" // what we receive from upstream
  },

  {
    name = "userServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "8001"
    interface = "0.0.0.0" // default

    //log-incoming = true

    ws-keep-alive = 30s
    use-https = true
    server-keystore = "race-net-http-test/src/resources/localhost.jks" // this would normally go into the vault
    server-keystore-pw = "wz3YEbokEb" // this would normally go into the vault

    routes = [
      {
        name = "userRoute"
        class = "gov.nasa.race.http.share.UserServerRoute"

        //--- where the static content is located (index.html etc)
        site-root = ${site.dir}
        request-prefix = "share"  // defaults to name

        auth = {
          class = ".http.NoAuthMethod"
        }
        __auth = { // password auth for the websocket
          class = ".http.PwAuthMethod"
          users = ${data.dir}"/passwd" // this would normally go into the vault
        }
        __auth = { // password-less auth
          class = ".http.webauthn.WebAuthnMethod"  // use W3C WebAuthn for password-less user auth
          user-credentials = ${data.dir}"/userCredentials.json"

          registration = { // we only allow registration from localhost
            host-filter = "loopback"
            client-filter = "loopback"
          }

          authentication = { // authentication is allowed from any machine that can connect to the server
            host-filter = "all"
            client-filter = "all"
          }
        }

        user-permissions = ${data.dir}"/userPermissions.json"
        edit-timeout = 5m // timeout for inactive edit sessions

        write-to = "/share/in"
        read-from = "/share/out"
      }
    ]

    //loglevel = "info"
  },

  {
    name = "updater"
    class = "gov.nasa.race.http.share.UpdateActor"

    node-list = ${data.dir}"/nodeList.json"
    row-list = ${data.dir}"/rowList.json"
    column-list = ${data.dir}"/columnList.json"

    value-formulas = ${data.dir}"/formulaList.json"
    constraint-formulas = ${data.dir}"/constraintList.json"

    data-dir = ${data.dir}

    read-from = "/share/in"
    write-to = "/share/out"
  },

  {
    name = "trackServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "9000"
    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "tracks"
        class = "gov.nasa.race.http.cesium.CesiumTrackRoute"
        access-token = "??cesium.access-token"

        // resource origins and cache dirs
        cesium-cache = ${cache.dir}"/cesium/1.86"

        maptile-provider = "http://tile.stamen.com/terrain"
        maptile-cache = ${cache.dir}"/tile.stamen.com/terrain"

        elevation-provider = "https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer"
        elevation-cache = ${cache.dir}"/elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer"

        eye = {
          lon = -122.4
          lat = 37.6
          alt = 150000
        }

        read-from = "/tracks"
      }
    ]
  },

  //  {
  //    name = "trackSource"
  //    class = ".air.actor.SimpleAircraft"
  //    tick-interval = 5s
  //    write-to = "/tracks"
  //
  //    id = "557902201"
  //    cs = "XY333"
  //    lat = 37.246822
  //    lon = -121.9770277
  //    altitude-ft = 5000
  //    heading = 84.0
  //    speed-kn = 350.0
  //  }

  {
    name = "sbsReplay"
    class = ".air.actor.SbsReplayActor"
    write-to = "/tracks"

    can-reset-clock = true
    drop-after = "20 seconds"    // if set, check for dropped flights

    pathname = ${archive}
    buffer-size = 32768
  }
]

include classpath("config/logging-race.conf")

