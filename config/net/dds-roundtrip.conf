// example of a DDS roundtrip with data translation
// note this requires a OMG Java 5 PSM compliant DDS implementation to be installed
// (e.g. PrismTech Vortex Cafe)

name = "dds-roundtrip"

property {
  org.omg.dds.serviceClassName = "com.prismtech.cafe.core.ServiceEnvironmentImpl"
}

actors = [
  { // our trusted data generator
    name = "testAC"
    class = "gov.nasa.race.actors.models.SimpleAircraft"

    tick-interval = 5s
    write-to = "fpos/out"

    // aircraft parameters
    id = "-"
    cs = "XY333"
    lat = 37.246822
    lon = -121.9770277
    heading = 84.0
    altitude-ft = 5000
    speed-kn = 350.0
  },
  { // show what is about to be published
    name = "fposOutProbe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "fpos/out"
    prefix = "DDS out: "
  },

  { name = "ddsPublisher"
    class = ".actors.exports.DDSExportActor"
    read-from = "fpos/out"

    translator.class = "gov.nasa.race.data.dds.FlightPos2FlightRecord"
    writer = {
      class = ".data.dds.FlightRecordWriter" // this encapsulates TypeSupport[T],Topic[T] and Writer[T]
      topic = "myTopic"
    }
  },

  { name = "ddsSubscriber"
    class = ".actors.imports.DDSImportActor"
    write-to = "fpos/in"

    translator.class = "gov.nasa.race.data.dds.FlightRecord2FlightPos"
    reader = {
      class = ".data.dds.FlightRecordReader"
      topic = "myTopic"
    }
  },
  { // show what we received from DDS
    name = "fposInProbe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "fpos/in"
    prefix = "DDS in:  "
  }
]

include classpath("config/logging-race.conf")