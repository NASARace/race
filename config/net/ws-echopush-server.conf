// example of a simple un-authorized websocket route
//      connect with ws-echopush-client.conf
name = "ws-echopush-server"

actors = [
  { name = "producer"
    class = "gov.nasa.race.actor.TestPublisher"
    write-to = "/push"
    message = "new data"
    tick-interval = 3s
  },

  {
    name = "httpServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "8080"
    //log-incoming = true

    ws-keep-alive = 1 second
    log-incoming = true

    use-https = true
    //server-keystore = "??server.keystore"
    //server-keystore-pw = "??server.pw"
    server-keystore = "race-net-http-test/src/resources/localhost.jks" // this would normally go into the vault
    server-keystore-pw = "wz3YEbokEb" // this would normally go into the vault

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "echopush"
        class = "gov.nasa.race.http.AuthorizedEchoPushService"
        user-auth = "race-net-http-test/src/resources/users" // this would normally go into the vault
        read-from = "/push"
      }
    ]
  }
]

// keep websocket connections alive with transparent ping frames
//akka.http.server.websocket.periodic-keep-alive-max-idle = 1 second // we use our own ws-keep-alive

include classpath("config/logging-race.conf")