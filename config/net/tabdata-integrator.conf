// example of a tabdata upstream integration node which receives and distributes provider changes

name = "tabdata-integrator"
show-exceptions = true

site.dir = "race-net-http/src/main/resources/sites/tabdata"
data.dir = "race-net-http-test/src/resources/sites/tabdata/data"

actors = [

  {
    name = "nodeServer"
    class = "gov.nasa.race.http.HttpServer"

    //--- this would normally be on a different interface / port 80, which is why we can't run it in one server actor
    host = "localhost"
    port = "8000"
    interface = "0.0.0.0"

    ws-keep-alive = 30s

    // TODO - use https/wss

    routes = [
      {
        name = "tabdata-server"
        class = "gov.nasa.race.http.tabdata.NodeServerRoute"

        read-from = ["/tabdata/down", "/tabdata/out"]
        write-to = "/tabdata/in"
      }
    ]
  },

  {
    name = "deviceServer"  // for external devices/browsers
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "8080"
    interface = "0.0.0.0" // default

    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      {
        name = "tabdata"
        class = "gov.nasa.race.http.tabdata.UserServerRoute"

        site-root = ${site.dir}
        request-prefix = "tabdata"  // defaults to name

        user-permissions = "race-net-http-test/src/resources/sites/tabdata/data/userPermissions.json"

        read-from = "/tabdata/out"
        write-to = "/tabdata/in"
      }
    ]
  },

  {
    name = "tabdataService"
    class = "gov.nasa.race.http.tabdata.TabDataUpdateActor"

    node-id = "/providers/region1/integrator" // our own site name

    row-list = ${data.dir}"/rowList.json"
    column-list = ${data.dir}"/columnList.json"
    formula-list = ${data.dir}"/formulaList.json"
    column-data = ${data.dir}

    read-from = "/tabdata/in"
    write-to = "/tabdata/out"
    write-downstream-to = "/tabdata/down"
  }
]

include classpath("config/logging-race.conf")
