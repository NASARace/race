// example of a terminal share provider node that is connected to an upstream integrator
//     open browser on url http://localhost:8082/share
// upstream server can be started with share-integrator.conf

name = "share-provider_2"
show-exceptions = true

site.dir = "race-net-http/src/main/resources/sites/share"

provider = "provider_2"
data.dir = "race-net-http-test/src/resources/sites/share/data/"${provider}

actors = [
  {
    name = "upstreamConnector"
    class = "gov.nasa.race.http.share.UpstreamConnectorActor"

    ws-url = "ws://localhost:8000/share-integrator"  // this would normally be a public URL  TODO  - use https/wss
    uid = ${provider}  // normally from vault
    pw = "supersecret" // - " -

    retry-interval = 60s // if set we try to reconnect if the connection times out or is dropped

    read-from = "/share/out"  // what we send to upstream
    write-to = "/share/in" // what we receive from upstream
  },

  {
    name = "userServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "8082"
    interface = "0.0.0.0" // default

    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      {
        name = "userRoute"
        class = "gov.nasa.race.http.share.UserServerRoute"

        //--- where the static content is located (index.html etc)
        site-root = ${site.dir}
        request-prefix = "share"  // defaults to name
        //tick-interval = 20s // our own keepAlive protocol

        user-permissions = ${data.dir}"/userPermissions.json"

        read-from = "/share/out"
        write-to = "/share/in"
      }
    ]

    //loglevel = "info"
  },

  {
    name = "shareService"
    class = "gov.nasa.race.http.share.UpdateActor"

    node-id = "/providers/region1/"${provider} // our own site name
    upstream-id = "/providers/region1/coordinator"

    row-list = ${data.dir}"/rowList.json"
    column-list = ${data.dir}"/columnList.json"
    value-formulas = ${data.dir}"/formulaList.json"
    constraint-formulas = ${data.dir}"/constraintList.json"

    data-dir = ${data.dir}

    read-from = "/share/in"
    write-to = "/share/out"
  }
]

include classpath("config/logging-race.conf")

