// example of a tabdata provider node that is connected to an upstream integrator
//     open browser on url http://localhost:8080/tabdata
// upstream server can be started with tabdata-integrator.conf

name = "tabdata-provider_2"
show-exceptions = true

site.dir = "race-net-http/src/resources/sites/tabdata"
data.dir = "race-net-http-test/src/resources/sites/tabdata/data/provider_2"

actors = [
  {
    name = "upstreamConnector"
    class = "gov.nasa.race.http.tabdata.TabDataAdapterActor"

    read-from = "/tabdata/up"  // what we send to upstream
    write-to = "/tabdata/in" // what we receive from upstream

    ws-url = "ws://localhost:8000/tabdata-server"  // this would normally be a public URL  TODO  - use https/wss
    uid = "gonzo"  // normally from vault
    pw = "whatever" // - " -

    retry-interval = 60s // if set we try to reconnect if the connection times out or is dropped
  },

  {
    name = "deviceServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "8082"
    interface = "0.0.0.0" // default

    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      {
        name = "tabdata"
        class = "gov.nasa.race.http.tabdata.DeviceServerRoute"

        //--- where the static content is located (index.html etc)
        site-root = ${site.dir}
        request-prefix = "tabdata"  // defaults to name

        user-permissions = ${data.dir}"/userPermissions.json"

        write-to = "/tabdata/in"
        read-from = "/tabdata/out"
      }
    ]
  },

  {
    name = "tabdataService"
    class = "gov.nasa.race.http.tabdata.TabDataServiceActor"

    node-id = "provider_2" // our own site name
    upstream-id = "integrator" // upstream site node

    field-catalog = ${data.dir}"/fieldCatalog.json"
    provider-catalog = ${data.dir}"/providerCatalog.json"
    provider-data = ${data.dir}

    read-from = "/tabdata/in"
    write-to = "/tabdata/out"
    write-upstream-to = "/tabdata/up"
  }
]

include classpath("config/logging-race.conf")
